{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Preceding words As a junior student, I attempts to write down this document. On the one hand, to summarize the recent experience of learning game engine, also, it will be a part of my graduation project, on the other hand, I want to point out the general direction for future visitors. Hopefully, more and more people are willing to learn the game engine. Understand and improve it, to realize the Matrix scenes sooner. If you want to study with chinese, click here . If you have any questions when reading, please submit issue in the Github address or send email to 2481814748@qq.com . I will be very grateful for your valuable advices. Welcome to the world of game engines Why do you study Game engine is the jewel of the game's crown. The development of a game engine involves a wide range of knowledge. And even if you do not work this in the future, it's still valuable to learn. Through it, you will know how humans compress the world we live in into the engine. What will you learn I will use informations from GAMES104 and other papers, to provide enough theoretical knowledges. Also attach my VitarEngine , which developed after learning courses of Cherno after development. Please also support HazelEngine .","title":"\u5bb6"},{"location":"#preceding-words","text":"As a junior student, I attempts to write down this document. On the one hand, to summarize the recent experience of learning game engine, also, it will be a part of my graduation project, on the other hand, I want to point out the general direction for future visitors. Hopefully, more and more people are willing to learn the game engine. Understand and improve it, to realize the Matrix scenes sooner. If you want to study with chinese, click here . If you have any questions when reading, please submit issue in the Github address or send email to 2481814748@qq.com . I will be very grateful for your valuable advices.","title":"Preceding words"},{"location":"#welcome-to-the-world-of-game-engines","text":"","title":"Welcome to the world of game engines"},{"location":"#why-do-you-study","text":"Game engine is the jewel of the game's crown. The development of a game engine involves a wide range of knowledge. And even if you do not work this in the future, it's still valuable to learn. Through it, you will know how humans compress the world we live in into the engine.","title":"Why do you study"},{"location":"#what-will-you-learn","text":"I will use informations from GAMES104 and other papers, to provide enough theoretical knowledges. Also attach my VitarEngine , which developed after learning courses of Cherno after development. Please also support HazelEngine .","title":"What will you learn"},{"location":"introduce/","text":"What is the game engine Wikipedia A game engine is a software framework primarily designed for the development of video games, and generally includes relevant libraries and support programs. The \"engine\" terminology is similar to the term \"software engine\" used in the software industry. Game engine can also refer to the development software utilizing this framework, typically offering a suite of tools and features for developing games. Developers can use game engines to construct games for video game consoles and other types of computers. The core functionality typically provided by a game engine may include a rendering engine (\"renderer\") for 2D or 3D graphics, a physics engine or collision detection (and collision response), sound, scripting, animation, artificial intelligence, networking, streaming, memory management, threading, localization support, scene graph, and video support for cinematics. Game engine implementers often economize on the process of game development by reusing/adapting, in large part, the same game engine to produce different games or to aid in porting games to multiple platforms. Dr.Wang The technological cornerstone of the Matrix ; Tools to produce ideas; The art of complex systems. Zong Objectively speaking, a game engine is a collection of modules that are needed at the bottom of games. But if you think it as a complex machine or a real world, that will be a greate artwork. Respect, appreciate and understand it. The game engine will provide you with a complete development tools chain for all kinds of games, even movies. How to learn game engine The game engine contains most of the existing science knowledge, which will take you almost a whole lifetime to understand deeply. So most time, I want to talk about building the theoretical framework of the game engine with you. The rest will be filled in the future by yourself. Game engine Framework From top to bottom, they are the tools layer, the function layer, the resource layer, the platform layer and the core layer, with third-party libraries. I place the platform layer above the core layer, which means to abstract API from core codes to the platform layer and override them. Tools layer Provide developers with editor tools, such as blueprints. Function layer It is mainly through the underlying core modules to achieve the main functions required by engine development, and Tick each function module in order. Schedule and management among multithreads also belong to this layer. Resource layer It is used to record the reference relationships within or between resources and also manage the asset lifecycle. For example, when Assimp load models, a storage structure like the following will be built. Platform layer It will override the API from the core layer by different methods which depend on game platforms and rendering interfaces. Core layer Includes math library, event monitoring, logging and other core functions. Data structure and memory management also belong to this layer, by optimizing the underlying data storage to reduce memory holes. Data Sources Introduction of Assimp loading models.","title":"\u4ecb\u7ecd"},{"location":"introduce/#what-is-the-game-engine","text":"","title":"What is the game engine"},{"location":"introduce/#wikipedia","text":"A game engine is a software framework primarily designed for the development of video games, and generally includes relevant libraries and support programs. The \"engine\" terminology is similar to the term \"software engine\" used in the software industry. Game engine can also refer to the development software utilizing this framework, typically offering a suite of tools and features for developing games. Developers can use game engines to construct games for video game consoles and other types of computers. The core functionality typically provided by a game engine may include a rendering engine (\"renderer\") for 2D or 3D graphics, a physics engine or collision detection (and collision response), sound, scripting, animation, artificial intelligence, networking, streaming, memory management, threading, localization support, scene graph, and video support for cinematics. Game engine implementers often economize on the process of game development by reusing/adapting, in large part, the same game engine to produce different games or to aid in porting games to multiple platforms.","title":"Wikipedia"},{"location":"introduce/#drwang","text":"The technological cornerstone of the Matrix ; Tools to produce ideas; The art of complex systems.","title":"Dr.Wang"},{"location":"introduce/#zong","text":"Objectively speaking, a game engine is a collection of modules that are needed at the bottom of games. But if you think it as a complex machine or a real world, that will be a greate artwork. Respect, appreciate and understand it. The game engine will provide you with a complete development tools chain for all kinds of games, even movies.","title":"Zong"},{"location":"introduce/#how-to-learn-game-engine","text":"The game engine contains most of the existing science knowledge, which will take you almost a whole lifetime to understand deeply. So most time, I want to talk about building the theoretical framework of the game engine with you. The rest will be filled in the future by yourself.","title":"How to learn game engine"},{"location":"introduce/#game-engine-framework","text":"From top to bottom, they are the tools layer, the function layer, the resource layer, the platform layer and the core layer, with third-party libraries. I place the platform layer above the core layer, which means to abstract API from core codes to the platform layer and override them.","title":"Game engine Framework"},{"location":"introduce/#tools-layer","text":"Provide developers with editor tools, such as blueprints.","title":"Tools layer"},{"location":"introduce/#function-layer","text":"It is mainly through the underlying core modules to achieve the main functions required by engine development, and Tick each function module in order. Schedule and management among multithreads also belong to this layer.","title":"Function layer"},{"location":"introduce/#resource-layer","text":"It is used to record the reference relationships within or between resources and also manage the asset lifecycle. For example, when Assimp load models, a storage structure like the following will be built.","title":"Resource layer"},{"location":"introduce/#platform-layer","text":"It will override the API from the core layer by different methods which depend on game platforms and rendering interfaces.","title":"Platform layer"},{"location":"introduce/#core-layer","text":"Includes math library, event monitoring, logging and other core functions. Data structure and memory management also belong to this layer, by optimizing the underlying data storage to reduce memory holes.","title":"Core layer"},{"location":"introduce/#data-sources","text":"Introduction of Assimp loading models.","title":"Data Sources"},{"location":"Render/","text":"","title":"Index"}]}